{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input:ScriptTagInput!){\n        scriptTagCreate(input:$input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPT_TAG = gql`\n    query{\n        scriptTags(first:5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\nconst DELETE_SCRIPT_TAG = gql`\n    mutation scriptTagDelete($id:ID!){\n        scriptTagDelete(id:$id){\n            scriptTag (id){\n\n            }\n        }\n    }\n`;\n\nconst ScriptPage = () => {\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(QUERY_SCRIPT_TAG);\n  if (loading) return __jsx(\"div\", null, \"Loading\");\n  if (err) return __jsx(\"div\", null, error.message);\n  return __jsx(\"div\", null, \"current script tags\", data.scriptTags.edges.map(tag => {\n    return __jsx(\"div\", {\n      key: tag.node.id\n    }, __jsx(\"p\", null, tag.node.id));\n  }));\n};\n\nexport default ScriptPage;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/shopify/pages/scriptPage.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAG","DELETE_SCRIPT_TAG","ScriptPage","loading","err","data","error","message","scriptTags","edges","map","tag","node","id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAkBC,WAAlB,QAAqC,qBAArC;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMI,gBAAgB,GAAGJ,GAAI;;;;;;;;;;;;CAA7B;AAcA,MAAMK,iBAAiB,GAAGL,GAAK;;;;;;;;CAA/B;;AAUA,MAAMM,UAAU,GAAG,MAAM;AACrB,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,GAAT;AAAcC,IAAAA;AAAd,MAAsBR,QAAQ,CAACG,gBAAD,CAApC;AAEA,MAAGG,OAAH,EAAY,OAAO,6BAAP;AACZ,MAAGC,GAAH,EAAQ,OAAO,mBAAME,KAAK,CAACC,OAAZ,CAAP;AAER,SACI,0CAECF,IAAI,CAACG,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BC,GAAG,IAAG;AAC7B,WACI;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,IAAJ,CAASC;AAAnB,OACI,iBAAIF,GAAG,CAACC,IAAJ,CAASC,EAAb,CADJ,CADJ;AAKH,GANA,CAFD,CADJ;AAYH,CAlBD;;AAoBA,eAAeX,UAAf","sourcesContent":["import gql from 'graphql-tag'\nimport { useQuery,useMutation } from \"@apollo/react-hooks\";\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input:ScriptTagInput!){\n        scriptTagCreate(input:$input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`\n\nconst QUERY_SCRIPT_TAG = gql`\n    query{\n        scriptTags(first:5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`\n\nconst DELETE_SCRIPT_TAG = gql `\n    mutation scriptTagDelete($id:ID!){\n        scriptTagDelete(id:$id){\n            scriptTag (id){\n\n            }\n        }\n    }\n`\n\nconst ScriptPage = () => {\n    const {loading,err, data} = useQuery(QUERY_SCRIPT_TAG);\n\n    if(loading) return <div>Loading</div>\n    if(err) return <div>{error.message}</div>\n\n    return (\n        <div>\n            current script tags\n        {data.scriptTags.edges.map(tag =>{\n            return(\n                <div key={tag.node.id}>\n                    <p>{tag.node.id}</p>\n                </div>\n            )\n        })}\n        </div>\n    )\n}\n\nexport default ScriptPage\n"]},"metadata":{},"sourceType":"module"}