{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input:ScriptTagInput!){\n        scriptTagCreate(input:$input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPT_TAG = gql`\n    query{\n        scriptTags(first:5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\nconst DELETE_SCRIPT_TAG = gql`\n    mutation scriptTagDelete($id:ID!){\n            scriptTagDelete (id:$id){\n                deletedScriptTagId\n                userErrors{\n                    field\n                    message\n                }\n            }\n        }    \n`;\n\nconst ScriptPage = () => {\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(QUERY_SCRIPT_TAG);\n  if (loading) return __jsx(\"div\", null, \"Loading\");\n  if (err) return __jsx(\"div\", null, error.message);\n  console.log(\"this is the script tag \" + data);\n  return __jsx(Page, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"here are the script tags\",\n    sectioned: true\n  }, __jsx(\"p\", null, \"create or delete a script tag\"))), __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Delete tags\",\n    sectioned: true\n  }, __jsx(\"p\", null, \"create or delete a script tag\"), __jsx(\"button\", {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: () => {\n      deleteScripts({\n        variables: {\n          input: {\n            src: \"https://cb331b62.ngrok.io/TestScript.js\",\n            displayScope: \"ALL\"\n          },\n          refetchQueries: [{\n            query: QUERY_SCRIPT_TAG\n          }]\n        }\n      });\n    }\n  })))) // <div>\n  //     current script tags\n  //     <button\n  //         type=\"submit\"\n  //         onClick={() => {createScripts({\n  //             variables:{\n  //                 input:{\n  //                     src:\"https://8e93118a.ngrok.io/TestScript.js\", \n  //                     displayScope:\"ALL\"\n  //                         }\n  //                         }, refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n  //                     })\n  //                 }}\n  //     >\n  //         Create Script tag\n  //     </button>\n  // {data.scriptTags.edges.map(tag =>{\n  //     return(\n  //         <div key={tag.node.id}>\n  //             <p>{tag.node.id}</p>\n  //             <button type=\"submit\" onClick={() =>{\n  //                 deleteScripts({\n  //                     variables:{\n  //                         id:tag.node.id\n  //                     },\n  //                     refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n  //                 })\n  //             }}>Delete Script Tag</button>\n  //         </div>\n  //     )\n  // })}\n  // </div>\n  ;\n};\n\nexport default ScriptPage;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/shopify/pages/scriptPage.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAG","DELETE_SCRIPT_TAG","ScriptPage","createScripts","deleteScripts","loading","err","data","error","message","console","log","variables","input","src","displayScope","refetchQueries","query"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAkBC,WAAlB,QAAqC,qBAArC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,YAApC,EAAkDC,KAAlD,QAA8D,kBAA9D;AAEA,MAAMC,iBAAiB,GAAGT,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMU,gBAAgB,GAAGV,GAAI;;;;;;;;;;;;CAA7B;AAcA,MAAMW,iBAAiB,GAAGX,GAAK;;;;;;;;;;CAA/B;;AAYA,MAAMY,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,aAAD,IAAkBX,WAAW,CAACO,iBAAD,CAAnC;AACA,QAAM,CAACK,aAAD,IAAkBZ,WAAW,CAACS,iBAAD,CAAnC;AACA,QAAM;AAACI,IAAAA,OAAD;AAASC,IAAAA,GAAT;AAAcC,IAAAA;AAAd,MAAsBhB,QAAQ,CAACS,gBAAD,CAApC;AAEA,MAAGK,OAAH,EAAY,OAAO,6BAAP;AACZ,MAAGC,GAAH,EAAQ,OAAO,mBAAME,KAAK,CAACC,OAAZ,CAAP;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BJ,IAAxC;AACA,SACI,MAAC,IAAD,QACI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,0BAAZ;AAAuC,IAAA,SAAS;AAAhD,KACI,iDADJ,CADJ,CADJ,EAMI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,SAAS;AAAnC,KACI,iDADJ,EAEI;AACI,IAAA,OAAO,MADX;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,OAAO,EAAE,MAAK;AACVH,MAAAA,aAAa,CAAC;AACVQ,QAAAA,SAAS,EAAC;AACNC,UAAAA,KAAK,EAAC;AACFC,YAAAA,GAAG,EAAC,yCADF;AAEFC,YAAAA,YAAY,EAAC;AAFX,WADA;AAIHC,UAAAA,cAAc,EAAC,CAAC;AAACC,YAAAA,KAAK,EAACjB;AAAP,WAAD;AAJZ;AADA,OAAD,CAAb;AAQH;AAbL,IAFJ,CADJ,CANJ,CADJ,CA8BI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7DJ;AA+DH,CAvED;;AAyEA,eAAeE,UAAf","sourcesContent":["import gql from 'graphql-tag'\nimport { useQuery,useMutation } from \"@apollo/react-hooks\";\nimport {Button, Card, Layout, Page, ResourceList, Stack} from '@shopify/polaris'\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input:ScriptTagInput!){\n        scriptTagCreate(input:$input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`\n\nconst QUERY_SCRIPT_TAG = gql`\n    query{\n        scriptTags(first:5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`\n\nconst DELETE_SCRIPT_TAG = gql `\n    mutation scriptTagDelete($id:ID!){\n            scriptTagDelete (id:$id){\n                deletedScriptTagId\n                userErrors{\n                    field\n                    message\n                }\n            }\n        }    \n`\n\nconst ScriptPage = () => {\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG)\n    const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG)\n    const {loading,err, data} = useQuery(QUERY_SCRIPT_TAG);\n\n    if(loading) return <div>Loading</div>\n    if(err) return <div>{error.message}</div>\n    console.log(\"this is the script tag \" + data)\n    return (\n        <Page>\n            <Layout.Section>\n                <Card title=\"here are the script tags\" sectioned>\n                    <p>create or delete a script tag</p>\n                </Card>\n            </Layout.Section>\n            <Layout.Section>\n                <Card title=\"Delete tags\" sectioned>\n                    <p>create or delete a script tag</p>\n                    <button\n                        primary\n                        size=\"slim\"\n                        type=\"submit\"\n                        onClick={() =>{\n                            deleteScripts({\n                                variables:{\n                                    input:{\n                                        src:\"https://cb331b62.ngrok.io/TestScript.js\",\n                                        displayScope:\"ALL\"\n                                    }, refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n                                }\n                            })\n                        }}\n                    >\n\n                    </button>\n                </Card>\n            </Layout.Section>\n        </Page>\n        // <div>\n        //     current script tags\n        //     <button\n        //         type=\"submit\"\n        //         onClick={() => {createScripts({\n        //             variables:{\n        //                 input:{\n        //                     src:\"https://8e93118a.ngrok.io/TestScript.js\", \n        //                     displayScope:\"ALL\"\n        //                         }\n        //                         }, refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n        //                     })\n        //                 }}\n        //     >\n        //         Create Script tag\n        //     </button>\n        // {data.scriptTags.edges.map(tag =>{\n        //     return(\n        //         <div key={tag.node.id}>\n        //             <p>{tag.node.id}</p>\n        //             <button type=\"submit\" onClick={() =>{\n        //                 deleteScripts({\n        //                     variables:{\n        //                         id:tag.node.id\n        //                     },\n        //                     refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n        //                 })\n        //             }}>Delete Script Tag</button>\n        //         </div>\n        //     )\n        // })}\n        // </div>\n    )\n}\n\nexport default ScriptPage\n"]},"metadata":{},"sourceType":"module"}