{"ast":null,"code":"var __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport React from 'react';\nconst GET_PRODUCTS_BY_ID = gql`\n    query getProducts($ids:[ID!]!){\n    nodes(ids: $ids){\n      ... on Product{\n        title\n        handle\n        id\n        images(first:1){\n          edges{\n            node{\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first:1){\n          edges{\n            node{\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ProductList = () => {\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  });\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (err) return __jsx(\"div\", null, err.message);\n  console.log(\"this is the data \" + data);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Product List\"), data.nodes.map(product => __jsx(\"div\", null, data.title)));\n};\n\nexport default ProductList;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/shopify/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","React","GET_PRODUCTS_BY_ID","ProductList","loading","err","data","variables","ids","get","message","console","log","nodes","map","product","title"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,IAAR,EAAcC,YAAd,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,SAA9C,QAA8D,kBAA9D;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAGT,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA4BA,MAAMU,WAAW,GAAG,MAAM;AACtB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,GAAV;AAAeC,IAAAA;AAAf,MAAwBZ,QAAQ,CAACQ,kBAAD,EAAoB;AAACK,IAAAA,SAAS,EAAC;AAACC,MAAAA,GAAG,EAACR,KAAK,CAACS,GAAN,CAAU,KAAV;AAAL;AAAX,GAApB,CAAtC;AACA,MAAGL,OAAH,EAAY,OAAO,gCAAP;AACZ,MAAIC,GAAJ,EAAS,OAAO,mBAAMA,GAAG,CAACK,OAAV,CAAP;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBN,IAAlC;AACA,SACA,mBACI,iCADJ,EAEKA,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAeC,OAAO,IACnB,mBAAMT,IAAI,CAACU,KAAX,CADH,CAFL,CADA;AAQC,CAbL;;AAgBA,eAAeb,WAAf","sourcesContent":["import gql from 'graphql-tag'\nimport {useQuery} from '@apollo/react-hooks'\nimport {Card, ResourceList, Stack, TextStyle, Thumbnail} from '@shopify/polaris'\nimport store from 'store-js'\nimport React from 'react'\n\nconst GET_PRODUCTS_BY_ID = gql`\n    query getProducts($ids:[ID!]!){\n    nodes(ids: $ids){\n      ... on Product{\n        title\n        handle\n        id\n        images(first:1){\n          edges{\n            node{\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first:1){\n          edges{\n            node{\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ProductList = () => {\n    const {loading, err, data } = useQuery(GET_PRODUCTS_BY_ID,{variables:{ids:store.get('ids')}});\n    if(loading) return <div>Loading...</div>\n    if (err) return <div>{err.message}</div>\n    console.log(\"this is the data \" + data)\n    return (\n    <div>\n        <h1>Product List</h1>\n        {data.nodes.map(product =>(\n            <div>{data.title}</div>\n        ))}\n    </div>  \n    )\n    }\n\n\nexport default ProductList\n"]},"metadata":{},"sourceType":"module"}