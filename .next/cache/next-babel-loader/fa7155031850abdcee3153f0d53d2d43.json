{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input:ScriptTagInput!){\n        scriptTagCreate(input:$input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPT_TAG = gql`\n    query{\n        scriptTags(first:5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\nconst DELETE_SCRIPT_TAG = gql`\n    mutation scriptTagDelete($id:ID!){\n            scriptTagDelete (id:$id){\n                deletedScriptTagId\n                userErrors{\n                    field\n                    message\n                }\n            }\n        }    \n`;\n\nconst ScriptPage = () => {\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG);\n  const {\n    loading,\n    err,\n    data\n  } = useQuery(QUERY_SCRIPT_TAG);\n  if (loading) return __jsx(\"div\", null, \"Loading\");\n  if (err) return __jsx(\"div\", null, error.message);\n  console.log(\"this is the script tag \" + data);\n  return __jsx(\"div\", null, \"current script tags\", __jsx(\"button\", {\n    type: \"submit\",\n    onClick: () => {\n      createScripts({\n        variables: {\n          input: {\n            src: \"https://8e93118a.ngrok.io/TestScript.js\",\n            displayScope: \"ALL\"\n          }\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPT_TAG\n        }]\n      });\n    }\n  }, \"Create Script tag\"), data.scriptTags.edges.map(tag => {\n    return __jsx(\"div\", {\n      key: tag.node.id\n    }, __jsx(\"p\", null, tag.node.id), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: () => {\n        deleteScripts({\n          variables: {\n            id: tag.node.id\n          },\n          refetchQueries: [{\n            query: QUERY_SCRIPT_TAG\n          }]\n        });\n      }\n    }, \"Delete Script Tag\"));\n  }));\n};\n\nexport default ScriptPage;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/shopify/pages/scriptPage.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAG","DELETE_SCRIPT_TAG","ScriptPage","createScripts","deleteScripts","loading","err","data","error","message","console","log","variables","input","src","displayScope","refetchQueries","query","scriptTags","edges","map","tag","node","id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAkBC,WAAlB,QAAqC,qBAArC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,YAApC,EAAkDC,KAAlD,QAA8D,kBAA9D;AAEA,MAAMC,iBAAiB,GAAGT,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMU,gBAAgB,GAAGV,GAAI;;;;;;;;;;;;CAA7B;AAcA,MAAMW,iBAAiB,GAAGX,GAAK;;;;;;;;;;CAA/B;;AAYA,MAAMY,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,aAAD,IAAkBX,WAAW,CAACO,iBAAD,CAAnC;AACA,QAAM,CAACK,aAAD,IAAkBZ,WAAW,CAACS,iBAAD,CAAnC;AACA,QAAM;AAACI,IAAAA,OAAD;AAASC,IAAAA,GAAT;AAAcC,IAAAA;AAAd,MAAsBhB,QAAQ,CAACS,gBAAD,CAApC;AAEA,MAAGK,OAAH,EAAY,OAAO,6BAAP;AACZ,MAAGC,GAAH,EAAQ,OAAO,mBAAME,KAAK,CAACC,OAAZ,CAAP;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BJ,IAAxC;AACA,SACI,0CAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,MAAM;AAACJ,MAAAA,aAAa,CAAC;AAC1BS,QAAAA,SAAS,EAAC;AACNC,UAAAA,KAAK,EAAC;AACFC,YAAAA,GAAG,EAAC,yCADF;AAEFC,YAAAA,YAAY,EAAC;AAFX;AADA,SADgB;AAMXC,QAAAA,cAAc,EAAC,CAAC;AAACC,UAAAA,KAAK,EAACjB;AAAP,SAAD;AANJ,OAAD,CAAb;AAQP;AAVb,yBAFJ,EAgBCO,IAAI,CAACW,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BC,GAAG,IAAG;AAC7B,WACI;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,IAAJ,CAASC;AAAnB,OACI,iBAAIF,GAAG,CAACC,IAAJ,CAASC,EAAb,CADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAK;AAChCnB,QAAAA,aAAa,CAAC;AACVQ,UAAAA,SAAS,EAAC;AACNW,YAAAA,EAAE,EAACF,GAAG,CAACC,IAAJ,CAASC;AADN,WADA;AAIVP,UAAAA,cAAc,EAAC,CAAC;AAACC,YAAAA,KAAK,EAACjB;AAAP,WAAD;AAJL,SAAD,CAAb;AAMH;AAPD,2BAFJ,CADJ;AAaH,GAdA,CAhBD,CADJ;AAkCH,CA1CD;;AA4CA,eAAeE,UAAf","sourcesContent":["import gql from 'graphql-tag'\nimport { useQuery,useMutation } from \"@apollo/react-hooks\";\nimport {Button, Card, Layout, Page, ResourceList, Stack} from '@shopify/polaris'\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input:ScriptTagInput!){\n        scriptTagCreate(input:$input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`\n\nconst QUERY_SCRIPT_TAG = gql`\n    query{\n        scriptTags(first:5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`\n\nconst DELETE_SCRIPT_TAG = gql `\n    mutation scriptTagDelete($id:ID!){\n            scriptTagDelete (id:$id){\n                deletedScriptTagId\n                userErrors{\n                    field\n                    message\n                }\n            }\n        }    \n`\n\nconst ScriptPage = () => {\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG)\n    const [deleteScripts] = useMutation(DELETE_SCRIPT_TAG)\n    const {loading,err, data} = useQuery(QUERY_SCRIPT_TAG);\n\n    if(loading) return <div>Loading</div>\n    if(err) return <div>{error.message}</div>\n    console.log(\"this is the script tag \" + data)\n    return (\n        <div>\n            current script tags\n            <button\n                type=\"submit\"\n                onClick={() => {createScripts({\n                    variables:{\n                        input:{\n                            src:\"https://8e93118a.ngrok.io/TestScript.js\", \n                            displayScope:\"ALL\"\n                                }\n                                }, refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n                            })\n                        }}\n            >\n                Create Script tag\n            </button>\n        {data.scriptTags.edges.map(tag =>{\n            return(\n                <div key={tag.node.id}>\n                    <p>{tag.node.id}</p>\n                    <button type=\"submit\" onClick={() =>{\n                        deleteScripts({\n                            variables:{\n                                id:tag.node.id\n                            },\n                            refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n                        })\n                    }}>Delete Script Tag</button>\n                </div>\n            )\n        })}\n        </div>\n    )\n}\n\nexport default ScriptPage\n"]},"metadata":{},"sourceType":"module"}