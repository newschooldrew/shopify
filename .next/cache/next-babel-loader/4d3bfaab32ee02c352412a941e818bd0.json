{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id:ID!){\\n        scriptTagDelete(id:$id){\\n            scriptTag (id:$id){\\n                deletedScriptTagId\\n                userErrors{\\n                    field\\n                    message\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query{\\n        scriptTags(first:5){\\n            edges{\\n                node{\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input:ScriptTagInput!){\\n        scriptTagCreate(input:$input){\\n            scriptTag{\\n                id\\n            }\\n            userErrors{\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPT_TAG = gql(_templateObject2());\nvar DELETE_SCRIPT_TAG = gql(_templateObject3());\n\nvar ScriptPage = function ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPT_TAG),\n      loading = _useQuery.loading,\n      err = _useQuery.err,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading\");\n  if (err) return __jsx(\"div\", null, error.message);\n  return __jsx(\"div\", null, \"current script tags\", __jsx(\"button\", {\n    type: \"submit\",\n    onClick: function onClick() {\n      createScripts({\n        variables: {\n          input: {\n            src: \"https://8e93118a.ngrok.io/TestScript.js\",\n            displayScope: \"ALL\"\n          },\n          refetchQueries: [{\n            query: QUERY_SCRIPT_TAG\n          }]\n        }\n      });\n    }\n  }, \"Create Script tag\"), data.scriptTags.edges.map(function (tag) {\n    return __jsx(\"div\", {\n      key: tag.node.id\n    }, __jsx(\"p\", null, tag.node.id));\n  }));\n};\n\n_s(ScriptPage, \"HH9Pv0lj8NpZK5J2G2PcAagXIC8=\", false, function () {\n  return [useMutation, useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/shopify/pages/scriptPage.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPT_TAG","DELETE_SCRIPT_TAG","ScriptPage","createScripts","loading","err","data","error","message","variables","input","src","displayScope","refetchQueries","query","scriptTags","edges","map","tag","node","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAkBC,WAAlB,QAAqC,qBAArC;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAcA,IAAMI,gBAAgB,GAAGJ,GAAH,oBAAtB;AAcA,IAAMK,iBAAiB,GAAGL,GAAH,oBAAvB;;AAcA,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,qBACGJ,WAAW,CAACC,iBAAD,CADd;AAAA;AAAA,MACdI,aADc;;AAAA,kBAEON,QAAQ,CAACG,gBAAD,CAFf;AAAA,MAEdI,OAFc,aAEdA,OAFc;AAAA,MAENC,GAFM,aAENA,GAFM;AAAA,MAEDC,IAFC,aAEDA,IAFC;;AAIrB,MAAGF,OAAH,EAAY,OAAO,6BAAP;AACZ,MAAGC,GAAH,EAAQ,OAAO,mBAAME,KAAK,CAACC,OAAZ,CAAP;AAER,SACI,0CAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,mBAAM;AAACL,MAAAA,aAAa,CAAC;AAC1BM,QAAAA,SAAS,EAAC;AACNC,UAAAA,KAAK,EAAC;AACFC,YAAAA,GAAG,EAAC,yCADF;AAEFC,YAAAA,YAAY,EAAC;AAFX,WADA;AAIKC,UAAAA,cAAc,EAAC,CAAC;AAACC,YAAAA,KAAK,EAACd;AAAP,WAAD;AAJpB;AADgB,OAAD,CAAb;AAQP;AAVb,yBAFJ,EAgBCM,IAAI,CAACS,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0B,UAAAC,GAAG,EAAG;AAC7B,WACI;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,IAAJ,CAASC;AAAnB,OACI,iBAAIF,GAAG,CAACC,IAAJ,CAASC,EAAb,CADJ,CADJ;AAKH,GANA,CAhBD,CADJ;AA0BH,CAjCD;;GAAMlB,U;UACsBJ,W,EACID,Q;;;KAF1BK,U;AAmCN,eAAeA,UAAf","sourcesContent":["import gql from 'graphql-tag'\nimport { useQuery,useMutation } from \"@apollo/react-hooks\";\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input:ScriptTagInput!){\n        scriptTagCreate(input:$input){\n            scriptTag{\n                id\n            }\n            userErrors{\n                field\n                message\n            }\n        }\n    }\n`\n\nconst QUERY_SCRIPT_TAG = gql`\n    query{\n        scriptTags(first:5){\n            edges{\n                node{\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`\n\nconst DELETE_SCRIPT_TAG = gql `\n    mutation scriptTagDelete($id:ID!){\n        scriptTagDelete(id:$id){\n            scriptTag (id:$id){\n                deletedScriptTagId\n                userErrors{\n                    field\n                    message\n                }\n            }\n        }\n    }\n`\n\nconst ScriptPage = () => {\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG)\n    const {loading,err, data} = useQuery(QUERY_SCRIPT_TAG);\n\n    if(loading) return <div>Loading</div>\n    if(err) return <div>{error.message}</div>\n\n    return (\n        <div>\n            current script tags\n            <button\n                type=\"submit\"\n                onClick={() => {createScripts({\n                    variables:{\n                        input:{\n                            src:\"https://8e93118a.ngrok.io/TestScript.js\", \n                            displayScope:\"ALL\"\n                                }, refetchQueries:[{query:QUERY_SCRIPT_TAG}]\n                            }\n                            })\n                        }}\n            >\n                Create Script tag\n            </button>\n        {data.scriptTags.edges.map(tag =>{\n            return(\n                <div key={tag.node.id}>\n                    <p>{tag.node.id}</p>\n                </div>\n            )\n        })}\n        </div>\n    )\n}\n\nexport default ScriptPage\n"]},"metadata":{},"sourceType":"module"}